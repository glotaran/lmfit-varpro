# travis
sudo: false
language: python
cache: pip

matrix:
  fast_finish: true
  include:
    - python: 3.6
      env: TOXENV=flake8
      before_install:
        - echo "before_install"
        - python -m pip install -U pip>=9.0.1
        - pip install tox
      script:
        - tox
      after_success:
      # this prevents the tests to upload stuff to coveralls.io
        - echo "done"

    - python: 3.6
      # taken from https://quick-sphinx-tutorial.readthedocs.io/en/latest/advanced.html
      env: TOXENV=docs
      before_install:
        - echo "before_install"
        - python -m pip install -U pip>=9.0.1
        - pip install tox
      script:
        - tox
      after_success:
        # this prevents the tests to upload stuff to coveralls.io
        - echo "done"

    # LINUX
    - python: "3.6"
      env:
        - linux-py36
        - DEPLOY_ALL=true

    - python: "3.7-dev"  # 3.7 development branch
      env: linux-py37

    # OSX
    - language: generic
      python: 3.6
      os: osx
      env: osx-py36
      before_install:
        - echo "before_install"
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - conda update conda -y
        - conda create -n py36 python=3.6 -y
        - source activate py36
        - python -m pip install -U pip>=9.0.1

    - language: generic
      python: 3.7
      env: osx-py37
      os: osx
      before_install:
        - echo "before_install"
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - conda update conda -y
        - conda create -n py37 python=3.7 -y
        - source activate py37
        - python -m pip install -U pip>=9.0.1

#    - python: 3.6
#      env: win_coverage
#      install:
#        - pip install git+https://github.com/Robpol86/appveyor-artifacts.git coveralls
#      script:
#        - appveyor-artifacts -m download
#      after_success:
#        - coveralls
#        - coverage erase

before_install:
  - echo "before_install"
  - python -m pip install -U pip>=9.0.1

install:
  - pip install coveralls
  - pip install -r requirements_dev.txt

script:
  - pip install .
  - py.test --cov=lmfit_varpro --cov-config .coveragerc tests/
  - pip freeze

after_success:
  - coveralls
  - coverage erase

deploy:
# full deploy with python 3.6, since the package is pure python
  provider: pypi
  distributions: sdist bdist_wheel
  user: s-weigand
# if you just want to get used to workflow of publishing new versions
# you can simply comment the lines between PRODUCTION and uncomment the
# the ones between TESTING to use the PyPi testserver
############# PRODUCTION ###############
  password:
    secure: hxUebPQEG5q+Iz2cfXi7KedXNNBVNnmIRkYAGms+/DEB2C3ax3TUUsPYEcdCr4LdNT8TB10iHlSnuGcMhPMPAMQR82RjUtmAIJFudi1TPCvxsFXaKJIVlsVBBHM1qlfg5zIJ1v7QHmIzkyCNdNxE3doJd6XDUlDUFNC5fH+HPETYZC6e3rrXgLWyB2vqvmcpRRzBHfxkPiQ4cJs8LGbJiPwOyRl70/fAaHzWp9g3Jde4iyRCjGLsNGyhj9+hDZlgV/K6cDD2RQGmffWlllTLckDQUbLQbZjiM1vKnahSH0HifVTTXitVT/otYkx1KAjxGTbcRv8+QIL3MjMcFHjQlo2yAAkOS1aTBIdYKEeU6eKmgG3Cp1E9J43oplK8fjDMP5/eBMPtzs8ir0OYwtO15Np/nfPNyGNPsTKTXDJo8TheLXJUB+aUwbaHWYYeglNKiNC9+d7nostwXSCDkW1H0ZnI3GKOzjXQoXawLEQ8adst+mbzA1APJaH+7tJ+r/nwI7jFWen/MKYeczel9XVvmcmVlOD8hn5iXJkd5jVQMBfmUFE8g7Rdhg9htIYf/iHA33W/CcGCnw+NJTEzZqzqZ5R3JwNCVQSxlPbFpFvj+Vwx+M0KoFOIbTWs/hGZCY4mwe0GCuAKqUFPBO+4EXEsrqXSP6fnotUNZV3nkI4J0sE=
############# PRODUCTION ###############

############## TESTING #################
#  server: https://test.pypi.org/legacy/
#  password:
#    secure: votHCGQUaFfMqTha9GkNLoB3oWlB3CA5VNtiFSKJUxIJAUj7wVCtKct9pl1XlNZ9R0IJ/XQARf0vIewP24GgzkYBHKDPXegLLm12RaL+c9qP9qsKOM/EsJbwdu1yo/BM9zaX8HoQ0XjCQPw/G1UCTLU04rlOFheAkpReOQhApiUD3pJop2bSO9PctWOajAdoCbeG4qP/wrcNNx4aj+CLLeNkPFlb9et9NDSBV8JlZnXA8wPugru3oBkgG7D6K45pVwXiNYMhvXAJc166p5OHGMazVzt0KZAl1V7bISdQwsRUF5daNHX7K6oO5vS82CaIYv4joyYMBIXo4PDmP9RweaM+2mF1Lms8KvR/UbKG6g7IhuQkcfMR0lqPmpdEBOOCuY4TqFeQ/DUEGVjefmwQ7X2UDlFG+MRZK932l9Q8Ma74/CtGAbHNvl0ejWhR7IUbhtcxduQ1SV+l9ZQBSqLD8kIGoGft9rtvh5K0zfOR7rIbxbzSmiCiGfcsbEqb+K7IZCN6X5NxSdMUelmgvospjMNYVv8S3fQNWOBY0yyoAOCpJp9VDrJCLjmrNfzkm6GIBFjAyPdSxNAk3YbXo8OsYgoMoUzcHFfXKiv9/RYo+4TZT27geqg8hIgnZycHjjZPts7kCmRFGPOvx511PIWyMa93em4OWfx99IbGqoSZJag=
##############TESTING ##################
  skip_cleanup: true
  on:
############# PRODUCTION ###############
    branch: master
############# PRODUCTION ###############
    tags: true
    repo: glotaran/lmfit-varpro
    # there can only a maximum one test with DEPLOY_ALL=true, since PyPi will throw an error
    # and make the fail if the file (mostly sdist) already exists on the server
    condition: "$DEPLOY_ALL = true"

notifications:
  slack:
    rooms:
      - secure: "VidmiSSh3NBpBRsbe/Y4z02rEW/VNvW6IA47AgbVQkWM2D/f5p26vqequ4GHCDNJJzSUn5FX85eTj+p9nssXeVWJW3/KNp/NX0DTiylixj1Ep4myTfhWJwQlV56bq+7OZCjwRF290oTz4XECUQ6cL/+JeYH3E4GaAz3T9kxhpfZfP+dMJ8FIjQgaT5UorlcY3uFjx4FgScTyJPNyv0vzwpNc2KQVIWBVe3KBpnqkoYDGCjU4rVUa61HJ+agfYi0UelxyaRZKyMw1+EjTPZqpLBX2QKreAv7wWvbsVvmb+3jC/jlndVSN0HSG513nSUEAmd10I2YoWSPj5Ri8aMcBkJLVbt/Y8pedoHcAY8yam/Z5Pqh4lqvaP9tGJTLoIFzFkmrWnvtnx4bp+8QKSvK9SFhX2l90AoNKhwpYnAssMKgbtCeR3IJCEU99XpsT2DiKknvJKLQ+dcATv05b7XEnu5be46LllcykfoF6L64ZUyBPimlleGufdWNJzs/VWVHbVxZePlVpfX/Bp9sCq/uX1u3xosA1NWjiexw1R37u/fBTxELFuRR/jYOm7ON/YC/2yjHox05009WZy0IIzxwURpBH6YU0mQgXYFgTJGkNLN3418pXr0doN2LNgrfBUbAcD8jFVyx7aOJiGee3TP7/MKZRLhJcWs4uUKNWCqgtPbs="
